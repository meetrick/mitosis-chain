syntax = "proto3";

package mitosis.evmvalidator.v1;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";
import "mitosis/evmvalidator/v1/params.proto";

option go_package = "github.com/mitosis-org/chain/x/evmvalidator/types";

// Msg defines the x/evmvalidator Msg service
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams updates the module parameters
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);

  // UpdateValidatorEntrypointContractAddr updates the address of the
  // ConsensusValidatorEntrypoint contract
  rpc UpdateValidatorEntrypointContractAddr(
      MsgUpdateValidatorEntrypointContractAddr)
      returns (MsgUpdateValidatorEntrypointContractAddrResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address that controls the module
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // params is the updated parameters
  Params params = 2 [ (gogoproto.nullable) = false ];
}

// MsgUpdateParamsResponse is the Msg/UpdateParams response type
message MsgUpdateParamsResponse {}

// MsgUpdateValidatorEntrypointContractAddr is the
// Msg/UpdateValidatorEntrypointContractAddr request type
message MsgUpdateValidatorEntrypointContractAddr {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address that controls the module
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // addr is the new address of the ConsensusValidatorEntrypoint contract
  bytes addr = 2 [
    (gogoproto.customtype) = "github.com/mitosis-org/chain/types.EthAddress",
    (gogoproto.nullable) = false
  ];
}

// MsgUpdateValidatorEntrypointContractAddrResponse is the
// Msg/UpdateValidatorEntrypointContractAddr response type
message MsgUpdateValidatorEntrypointContractAddrResponse {}
